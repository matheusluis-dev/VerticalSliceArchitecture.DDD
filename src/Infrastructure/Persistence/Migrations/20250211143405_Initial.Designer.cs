// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250211143405_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Application.Infrastructure.Persistence.Inventories.Tables.InventoryTable", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PRODUCT_ID");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("int")
                        .HasColumnName("QUANTITY_AVAILABLE");

                    b.HasKey("Id")
                        .HasName("PK_INVENTORY");

                    b.HasIndex("Id")
                        .HasDatabaseName("IX_INVENTORY_ID");

                    b.HasIndex("ProductId")
                        .IsUnique()
                        .HasDatabaseName("IX_INVENTORY_PRODUCT_ID");

                    b.ToTable("INVENTORY", (string)null);
                });

            modelBuilder.Entity("Application.Infrastructure.Persistence.Orders.Tables.OrderItemTable", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("LAST_MODIFIED");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LAST_MODIFIED_BY");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ORDER_ID");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRICE");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PRODUCT_ID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("QUANTITY");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("UNIT_PRICE");

                    b.HasKey("Id")
                        .HasName("PK_ORDER_ITEM");

                    b.HasIndex("Id")
                        .HasDatabaseName("IX_ORDER_ITEM_ID");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("IX_ORDER_ITEM_ORDER_ID");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("IX_ORDER_ITEM_PRODUCT_ID");

                    b.ToTable("ORDER_ITEM", (string)null);
                });

            modelBuilder.Entity("Application.Infrastructure.Persistence.Orders.Tables.OrderTable", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("LAST_MODIFIED");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LAST_MODIFIED_BY");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TOTAL_PRICE");

                    b.HasKey("Id")
                        .HasName("PK_ORDER");

                    b.ToTable("ORDER", (string)null);
                });

            modelBuilder.Entity("Application.Infrastructure.Persistence.Products.Tables.ProductTable", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CREATED_BY");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("INVENTORY_ID");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("LAST_MODIFIED");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LAST_MODIFIED_BY");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("PK_PRODUCT");

                    b.HasIndex("Id")
                        .HasDatabaseName("IX_PRODUCT_ID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_PRODUCT_NAME");

                    b.ToTable("PRODUCT", (string)null);
                });

            modelBuilder.Entity("Application.Infrastructure.Persistence.Inventories.Tables.InventoryTable", b =>
                {
                    b.HasOne("Application.Infrastructure.Persistence.Products.Tables.ProductTable", "Product")
                        .WithOne("Inventory")
                        .HasForeignKey("Application.Infrastructure.Persistence.Inventories.Tables.InventoryTable", "ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_INVENTORY_PRODUCT_PRODUCT_ID");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Application.Infrastructure.Persistence.Orders.Tables.OrderItemTable", b =>
                {
                    b.HasOne("Application.Infrastructure.Persistence.Orders.Tables.OrderTable", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ORDER_ITEM_ORDER_ORDER_ID");

                    b.HasOne("Application.Infrastructure.Persistence.Products.Tables.ProductTable", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ORDER_ITEM_PRODUCT_PRODUCT_ID");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Application.Infrastructure.Persistence.Orders.Tables.OrderTable", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Application.Infrastructure.Persistence.Products.Tables.ProductTable", b =>
                {
                    b.Navigation("Inventory")
                        .IsRequired();

                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
