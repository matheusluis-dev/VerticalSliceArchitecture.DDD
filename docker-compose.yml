services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${Sa_Password:-#password123sdJwnwlk}
      - MSSQL_PID=Developer
    ports:
      - 1433:1433
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P \"#password123sdJwnwlk\" -C -Q 'SELECT 1' || exit 1"]
      interval: 15s
      retries: 10
      start_period: 10s
      timeout: 3s
  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - ./src/Api/mssql:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: >
      bash -c '/opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P "#password123sdJwnwlk" -C -d master -i docker-entrypoint-initdb.d/init.sql; echo "All done!";'

  mongodb:
    image: mongo:latest
    restart: always
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  api:
    image: ${DOCKER_REGISTRY-}api
    build:
      context: .
      dockerfile: src/Api/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=API_TEST;User Id=sa;Password=#password123sdJwnwlk;TrustServerCertificate=True;
    depends_on:
      - mongodb
      - sqlserver.configurator

volumes:
  sqlserver_data:
  mongodata:
